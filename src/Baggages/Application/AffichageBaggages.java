/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Baggages.Application;

import Classes.Baggages;
import Protocole.LUGAP.ReponseLUGAP;
import Protocole.LUGAP.RequeteLUGAP;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student
 */
public class AffichageBaggages extends javax.swing.JDialog {

    private Baggages[] BaggageArray;
    private Application_Baggages parent;

    public AffichageBaggages(java.awt.Frame parent, boolean modal, Baggages[] bag, Application_Baggages AB) {
        super(parent, modal);
        initComponents();
        if(bag != null)
        {
            this.BaggageArray = bag;
        }
        else
        {
            this.BaggageArray = new Baggages[1];
            this.BaggageArray[0] = null;
        }
        this.parent = AB;
        LoadBaggages();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CloseBT = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        BagTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        CloseBT.setText("Fermer");
        CloseBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBTActionPerformed(evt);
            }
        });

        BagTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant", "Poids", "Type", "Réceptionné (O/N)", "Chargé en soute (O/N)", "Vérifié par la douane (O/N)", "Remarques"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BagTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                BagTableInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        BagTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                BagTablePropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(BagTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(394, 394, 394)
                .addComponent(CloseBT)
                .addContainerGap(328, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CloseBT)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBTActionPerformed
        // TODO add your handling code here:
        boolean bcl = true;
        DefaultTableModel dtm = (DefaultTableModel) this.BagTable.getModel();
        for(int i = dtm.getRowCount()-1;i>=0; i--)
        {
            if(dtm.getValueAt(i, 4).equals("O") || dtm.getValueAt(i,4).equals("R"));
            else
            {
                bcl = false;
                break;
            }
        }
        if(bcl == true)
        {
            System.out.println("Fermeture");
            this.parent.setVisible(true);
            this.dispose();
        }
        else
            JOptionPane.showMessageDialog(this, "Il reste des baggages à charger ou à refuser");
    }//GEN-LAST:event_CloseBTActionPerformed

    private void BagTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_BagTableInputMethodTextChanged
        // TODO add your handling code here:
        System.out.println("Retour = \n");
        Baggages[] array = this.TableToBaggageArray(BagTable);
        for(int i = 0; i < array.length ; i++)
            System.out.println(i+". "+array[i].AfficheBaggages());
        
    }//GEN-LAST:event_BagTableInputMethodTextChanged

    private void BagTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_BagTablePropertyChange
        // TODO add your handling code here:
        if(this.isVisible()){
            Baggages[] array = this.TableToBaggageArray(BagTable);
            if(array != null && this.BaggageArray != null && !array.equals(this.BaggageArray)){
                parent.SendRequeteLUGAP(new RequeteLUGAP(RequeteLUGAP.REQUEST_UPDATE_BAGGAGES,array));
                ReponseLUGAP rep = parent.getReponseLUGAP();
                if(rep.getCode() == ReponseLUGAP.UPDATE_BAGGAGES_ERROR)
                    System.err.println("Erreur dans la mise à jour de baggages");
                else if(rep.getCode() == ReponseLUGAP.UPDATE_BAGGAGES_SUCCESS)
                    System.out.println("Mise à jour des baggages réussie");     
            }
        }
    }//GEN-LAST:event_BagTablePropertyChange

    private void LoadBaggages()
    {
        DefaultTableModel dtm = (DefaultTableModel) this.BagTable.getModel();
        for(int i = dtm.getRowCount(); i>0;i++)
            dtm.removeRow(i);
        for(int i = 0; BaggageArray[i]!=null;i++)
        {   
            dtm.addRow(BaggageToVector(BaggageArray[i]));
        }
    }
    
    private Baggages[] TableToBaggageArray(JTable table){
        int size = table.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        Baggages[] returnArray = new Baggages[size];
        if(size  == 0) return null;
        for(int i = 0; i < size ; i++){                    
            boolean isReceived = false, isVerified = false, isValise = false;
            int loadStatus = 0, id = 0;
            float weight = 0;
            String idBillet = "", remarks = ""; 

            String[] splitArray = ((String) dtm.getValueAt(i,0)).split("-\n");
            
            id = Integer.parseInt(splitArray[1]);
            idBillet = splitArray[0];
            weight = (float) dtm.getValueAt(i, 1);
            isValise = ((String)dtm.getValueAt(i,2)).compareTo("O") == 0;
            isReceived = ((String)dtm.getValueAt(i,3)).compareTo("O") == 0;
            if(((String)dtm.getValueAt(i,4)).compareTo("O") == 0){
                loadStatus = Baggages.STATUS_LOADED;
            }
            else if(((String)dtm.getValueAt(i,4)).compareTo("R") == 0)
                loadStatus = Baggages.STATUS_REFUSED;
            else
                loadStatus = Baggages.STATUS_NOT_LOADED;
            isVerified = ((String)dtm.getValueAt(i,5)).compareTo("O") == 0;
            remarks = (String) dtm.getValueAt(i, 6);

            System.out.println(" nouveau baggage = "+id+" - "+idBillet+" "+weight+" "+isValise+" "+isReceived+" "+loadStatus+" "+isVerified+" "+remarks);
            
            returnArray[i] = new Baggages(id,idBillet,weight,isValise,isReceived,loadStatus,isVerified,remarks);
        }
        
        return returnArray;
    }
    
    private Vector BaggageToVector(Baggages baggage){
        Vector ligne = new Vector();
        ligne.add(baggage.IdBillet + "-\n" + baggage.ID);
        ligne.add(baggage.weight);

        if(baggage.IsValise)
            ligne.add("VALISE");
        else
            ligne.add("PAS VALISE");

        if(baggage.isReceived)
            ligne.add("O");
        else
            ligne.add("N");

        if(baggage.loadedState == Baggages.STATUS_LOADED)
            ligne.add("O");
        else if(baggage.loadedState == Baggages.STATUS_REFUSED)
            ligne.add("R");
        else
            ligne.add("N");

        if(baggage.isVerified)
            ligne.add("O");
        else
            ligne.add("N");

        if(baggage.remarks.compareTo("") == 0 || baggage.remarks.compareTo("NEANT") == 0)
            ligne.add("NEANT");
        else 
            ligne.add(baggage.remarks);

        return ligne;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BagTable;
    private javax.swing.JButton CloseBT;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
