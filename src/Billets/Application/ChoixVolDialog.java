/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Billets.Application;

import Classes.Passagers;
import Classes.Vols;
import ProtocoleTICKMAP.ReponseTICKMAP;
import ProtocoleTICKMAP.RequeteTICKMAP;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student
 */
public class ChoixVolDialog extends javax.swing.JDialog 
{
    private Vols vol;
    private int prix;
    private int[] nbPlaces;
    ArrayList<String> passagersString;
    private Application_Billets AppliBillets;
    /**
     * Creates new form ChoixVolDialog
     */
    public ChoixVolDialog(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        this.AppliBillets = (Application_Billets)parent;
        this.passagersString = new ArrayList<String>();
    }
    
    public ChoixVolDialog(java.awt.Frame parent, boolean modal,Vols vol)
    {
        super(parent,modal);
        initComponents();
        this.vol = vol;
        IdTF.setText(vol.Destination);
        this.AppliBillets = (Application_Billets)parent;
        this.passagersString = new ArrayList<String>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IdL = new javax.swing.JLabel();
        IdTF = new javax.swing.JTextField();
        NomL = new javax.swing.JLabel();
        NomTF = new javax.swing.JTextField();
        PrenomTF = new javax.swing.JTextField();
        PrenomL = new javax.swing.JLabel();
        BirthdayL = new javax.swing.JLabel();
        BirthdayTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AjouterBT = new javax.swing.JButton();
        AnnulerBT = new javax.swing.JButton();
        SupprimerBT = new javax.swing.JButton();
        EnvoyerBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        IdL.setText("Vol:");

        IdTF.setEditable(false);

        NomL.setText("Nom:");

        PrenomL.setText("Pr√©nom:");

        BirthdayL.setText("Date de naissance(dd-mm-yyyy):");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Prenom", "DdN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        AjouterBT.setText("Ajouter");
        AjouterBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterBTActionPerformed(evt);
            }
        });

        AnnulerBT.setText("Annuler");
        AnnulerBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerBTActionPerformed(evt);
            }
        });

        SupprimerBT.setText("Supprimer");
        SupprimerBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerBTActionPerformed(evt);
            }
        });

        EnvoyerBT.setText("Envoyer");
        EnvoyerBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnvoyerBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AjouterBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IdL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IdTF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PrenomL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PrenomTF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NomL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NomTF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BirthdayL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BirthdayTF))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(SupprimerBT)
                                .addGap(18, 18, 18)
                                .addComponent(EnvoyerBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AnnulerBT, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdL)
                    .addComponent(IdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NomL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PrenomL)
                    .addComponent(PrenomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BirthdayL)
                    .addComponent(BirthdayTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AjouterBT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnnulerBT)
                    .addComponent(SupprimerBT)
                    .addComponent(EnvoyerBT))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AjouterBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterBTActionPerformed
        this.passagersString.add(this.vol.ID+","+this.NomTF.getText()+","+this.PrenomTF.getText()+","+this.BirthdayTF.getText());
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        Vector ligne = new Vector();
        ligne.add(NomTF.getText());
        ligne.add(PrenomTF.getText());
        ligne.add(BirthdayTF.getText());
        dtm.addRow(ligne);
        NomTF.setText("");
        PrenomTF.setText("");
        BirthdayTF.setText("");
    }//GEN-LAST:event_AjouterBTActionPerformed

    private void AnnulerBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerBTActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_AnnulerBTActionPerformed

    private void SupprimerBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerBTActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int Selection = jTable1.getSelectedRow();
        String Nom = (String)dtm.getValueAt(Selection,0);
        String Prenom = (String) dtm.getValueAt(Selection, 1);
        String dd = (String) dtm.getValueAt(Selection, 2);
        for(int i = 0; i< this.passagersString.size();i++)
        {
            String temp = this.passagersString.get(i);
            String[] tempSplit = temp.split(" , ");
            if(tempSplit[1].equals(Nom) && tempSplit[2].equals(Prenom))
            {
                this.passagersString.remove(i);
                break;
            }
        }
    }//GEN-LAST:event_SupprimerBTActionPerformed

    
    private byte[] EncryptPassengers(ArrayList<String> passagers)
    {
        if(passagers.size()>0)
        {
            String returnString = "";
            for(int i = 0; i < passagers.size();i++)
            {
                if(i > 0)
                    returnString +="#";
                returnString +=passagers.get(i);
            }
            System.out.println("Message crypt√© = "+returnString);
            try {
                return this.AppliBillets.EncryptMessage(returnString.getBytes());
            } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException ex) {
                Logger.getLogger(ChoixVolDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Veuillez ajouter un passager");
        }
        return null;
    }
    
    private void EnvoyerBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnvoyerBTActionPerformed
        System.out.println("Envoi des passagers en cours");
        RequeteTICKMAP req = new RequeteTICKMAP(RequeteTICKMAP.REQUEST_ADD_PASSENGERS, this.EncryptPassengers(passagersString));
        this.AppliBillets.sendRequeteTICKMAP(req);
        ReponseTICKMAP rep = this.AppliBillets.getReponseTICKMAP();
        if(rep.getCode() == ReponseTICKMAP.VOL_FULL){
            JOptionPane.showMessageDialog(this, "Il n'y a pas assez de place pour le vol s√©lectionn√©.");
            this.AppliBillets.setVisible(true);
            this.dispose();
        }
        else if(rep.getCode() == ReponseTICKMAP.PASSENGERS_ADDED){
            String decodedString= "";
            try {
                decodedString = new String(this.AppliBillets.DecryptMessage(rep.getCryptedMessage()));
            } catch (InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException | BadPaddingException ex) {
                Logger.getLogger(ChoixVolDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(!decodedString.isEmpty()){
                
                String[] parsedString = decodedString.split("@");
                this.prix = Integer.parseInt(parsedString[0]);
                String showString = "Le prix est de "+this.prix+".\n Vos places sont:";
                String[] parsedPlaces = parsedString[1].split("#");
                nbPlaces = new int[parsedPlaces.length];
                for(int i = 0; i < parsedPlaces.length; i++){
                    nbPlaces[i] = Integer.parseInt(parsedPlaces[i]);
                    showString += "\n-Nr."+nbPlaces[i];
                }
                int result = JOptionPane.showConfirmDialog(this, showString, "Confirmation", JOptionPane.YES_NO_OPTION);
                
            }
        }

    }//GEN-LAST:event_EnvoyerBTActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjouterBT;
    private javax.swing.JButton AnnulerBT;
    private javax.swing.JLabel BirthdayL;
    private javax.swing.JTextField BirthdayTF;
    private javax.swing.JButton EnvoyerBT;
    private javax.swing.JLabel IdL;
    private javax.swing.JTextField IdTF;
    private javax.swing.JLabel NomL;
    private javax.swing.JTextField NomTF;
    private javax.swing.JLabel PrenomL;
    private javax.swing.JTextField PrenomTF;
    private javax.swing.JButton SupprimerBT;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
